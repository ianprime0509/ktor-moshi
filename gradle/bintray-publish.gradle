task javadocJar(type: Jar, dependsOn:javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

def pomConfig = {
    licenses {
        license {
            name = POM_LICENCE_NAME
            url = POM_LICENCE_URL
            distribution = POM_LICENCE_DIST
        }
    }
    developers {
        developer {
            id = POM_DEVELOPER_ID
            name = POM_DEVELOPER_NAME
        }
    }

    scm {
        url = POM_SCM_URL
        connection = POM_SCM_CONNECTION
        developerConnection = POM_SCM_DEV_CONNECTION
    }
}

publishing {
    publications {
        Library(MavenPublication) {
            from components.java

            artifacts {
                archives sourcesJar
                archives javadocJar
            }

            groupId = project.group.toString()
            artifactId = POM_ARTIFACT_ID
            version = project.version.toString()

            pom.withXml {
                def root = asNode()
                root.appendNode('description', POM_NAME)
                root.appendNode('name', POM_DESCRIPTION)
                root.appendNode('url', POM_URL)
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = System.getenv("BINTRAY_USER") ?: project.properties["bintray.user"]?.toString()
    key = System.getenv("BINTRAY_KEY")
    publish = true

    publications = ["Library"]

    pkg {
        repo = project.group.toString()
        name = project.name
        licenses = [POM_LICENCE_NAME]
        version {
            name = project.version.toString()
        }
    }
}