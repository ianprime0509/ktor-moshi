# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1
orbs:
  codecov: codecov/codecov@1.0.5

# Reusable config blocks
.not_github_pages: &not_github_pages
    filters:
      branches:
        ignore: gh-pages
      tags:
        only: /.*/

.job_defaults: &job_defaults
  docker:
    # specify the version you desire here
    - image: circleci/openjdk:8-jdk

  working_directory: ~/repo

  environment:
    # Customize the JVM maximum heap limit
    JVM_OPTS: -Xmx3200m
    TERM: dumb


workflows:
  version: 2
  main:
    jobs:
      - check:
          <<: *not_github_pages
      - build:
          <<: *not_github_pages
      - deploy:
          requires:
            - build
            - check
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+([-\w]+)?$/
            branches:
              ignore: /.*/


commands:
  dependency_cache:
    description: "restore dependency cache from previous runs & populate cache for future runs"
    steps:
      # Download and cache dependencies
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: ./gradlew dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}


jobs:
  check:
    <<: *job_defaults
    steps:
      - checkout
      - dependency_cache

      # run tests!
      - run: ./gradlew check

      # publish results
      - store_test_results:
          path: library/build/test-results/test
      - store_artifacts:
          path: library/build/test-results/test
          when: always
      - codecov/upload:
          file: library/build/reports/jacoco/test/jacocoTestReport.xml

  build:
    <<: *job_defaults
    steps:
      - checkout
      - dependency_cache
      - run: ./gradlew assemble
      - store_artifacts:
          path: library/build/libs

  deploy:
    <<: *job_defaults
    steps:
      - checkout
      - dependency_cache
      - run: ./gradlew bintrayUpload
